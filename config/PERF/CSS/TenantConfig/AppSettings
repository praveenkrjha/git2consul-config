{
  "AbaServiceUrls": {
    "BaseUrl": "{{config:CSS.ABAServiceBase}}",
    "GetAbaDetailsUrl": "/api/v1/fed-wire-aba/value/{0}"
  },
  "AccountProxy": {
    "BaseUrl": "{{config:CSS.AccountProxyServiceBase}}"
  },
  "AllowedHosts": "*",
  "ApiPortalConfig": {
    "ApiPortalExcludedServices": "[\"account-proxy-service\", \"configuration-service\", \"el-proxy-service\", \"ens-proxy-service\", \"fi-proxy-service\", \"gl-proxy-service\", \"ofac-proxy-service\", \"service-dictionary-proxy-service\" ]",
    "NameSpace": "css-dev-backend-service",
    "SwaggerApiUriTemplate": "/api/{0}/swagger"
  },
  "ApplicationInsights": {
    "InstrumentationKey": "{{config:CSS.ApplicationInsights.InstrumentationKey}}"
  },
  "AuthorizationSetting": {
    "AuthorizationServiceUrl": "{{config:CSS.AuthorizationServiceBase}}/api/v1/institutions/InstitutionId/products/CSS/ApplicationId/role-service/permissions/assignedtome"
  },
  "CacheSettings": {
    "InMemoryCacheTimeoutMinutes": "{{config:CSS.InMemoryCacheTimeoutMinutes}}",
	"DistributedCacheTimeoutMinutes": "{{config:CSS.DistributedCacheTimeoutMinutes}}"
  },
  "Holiday": {
    "Holidays": [
      {
        "HolidayDate": "2020-08-13",
        "HolidayName": "Labour Day"
      },
      {
        "HolidayDate": "2020-08-19",
        "HolidayName": ""
      },
      {
        "HolidayDate": "2020-08-21",
        "HolidayName": "Labour Day"
      },
      {
        "HolidayDate": "2020-11-23",
        "HolidayName": "Thanks Giving Day"
      }
    ]
  },
  "HttpHeaderSetting": {
    "HeaderExclusions": [
      {
        "HeaderName": "Content-Type",
        "HttpMethods": [
          "Get"
        ]
      },
      {
        "HeaderName": "Content-Length",
        "HttpMethods": [
          "Get"
        ]
      },
      {
        "HeaderName": "Transfer-Encoding",
        "HttpMethods": [
          "Get"
        ]
      }
    ],
    "HeaderValidationExcludedExtentionsPattern": "^.*\\.(html|js|ico|css|ico|json)$",
    "HeaderValidationExcludedURLs": [
      "/api/setting-service/swagger",
      "/api/setting-service/hc",
      "/swagger"
    ]
  },
  "IdentitySettings": {
    "IdentityUrl": "{{config:CSS.IdentityServiceUrl}}",
    "ValidAudiences": [
      "jha-ux",
      "ux-api",
      "bg-api",
      "bg-api-ex"
    ]
  },
  "Kafka": {
    "AutoCommitIntervalMs": 5000,
    "BootstrapServers": "{{config:CSS.KafkaBootstrapServers.Servers}}",
    "Certificates": {
      "CaLocation": "{{config:CSS.KafkaBootstrapServers.Certificates.CaLocation}}",
      "ClientCertLocation": "{{config:CSS.KafkaBootstrapServers.Certificates.ClientCertLocation}}",
      "ClientKeyLocation": "{{config:CSS.KafkaBootstrapServers.Certificates.ClientKeyLocation}}"
    },
    "ClientId": "TenantConfig.Api",
    "DbConnection": {
      "CollectionName": {
        "Metadata": "{{config:CSS.MongoForMessageBus.CollectionName.Metadata}}",
        "ProcessingFailed": "{{config:CSS.MongoForMessageBus.CollectionName.ProcessingFailed}}",
        "PublishFailed": "{{config:CSS.MongoForMessageBus.CollectionName.PublishFailed}}"
      },
      "ConnectionString": "{{config:CSS.MongoForMessageBus.ConnectionString}}",
      "DatabaseName": "{{config:CSS.MongoForMessageBus.DatabaseName}}"
    },
    "GroupId": "TenantConfig.Api",
    "MaxPollIntervalMs": 300000,
    "MessageTimeoutMs": "5000",
    "RetrySettings": {
      "IsRequired": false,
      "MaxRetryCount": 3,
      "RetryIntervalMinutes": 5
    },
    "SocketKeepaliveEnable": "true"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "MasterDataServiceURLs": {
    "OptionTypeUrl": "{{config:CSS.MasterDataServiceBase}}/api/v1/institutions/{InstitutionId}/products/{ProductId}/{ApplicationId}/master-data-service/option/{OptionTypeKey}/{OptionDepth}"
  },
  "MongoSettings": {
    "Connection": {
      "ConnectionString": "{{config:CSS.Mongo.ConnectionPrefix}}://cssConfiguration_user:{{secret:CSSConfiguration-Mongo-Password}}@{{config:CSS.Mongo.HostNames}}/{{config:CSS.Mongo.ConnectionSuffix}}",
      "DatabaseName": "cssConfiguration"
    }
  },
  "PagingDefaultValue": {
    "PageNo": "1",
    "PageSize": "10"
  },
  "RedisConnectionString": "{{config:CSS.RedisConnectionString}}",
  "ServiceDictionaryProxyBaseUrl": "{{config:CSS.ServiceDictionaryProxyServiceBase}}",
  "WireDomainServiceAPISettings": {
    "BaseUrl": "http://wire-service",
    "FetchPreferenceByKeyRelativeUrl": "/api/v1/institutions/{0}/products/{1}/{2}/wire-service/user-preferences/{3}",
    "PostPreferenceRelativeUrl": "/api/v1/institutions/{0}/products/{1}/{2}/wire-service/user-preferences"
  },
  "RoleServiceUrls": {
    "BaseUrl": "{{config:CSS.AuthorizationServiceBase}}",
    "GetAllRolesForProduct": "/api/v1/institutions/{0}/products/{1}/role-service/roles"
  },
  "AzureAppConfiguration": {
    "ConnectionString": "{{config:CSS.AzureAppConfigConnectionString}}",
    "RefreshTimeSpan": "{{config:CSS.AzureAppConfigRefreshTimeSpan}}"
  }
}
